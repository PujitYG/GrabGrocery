<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.netflix.discovery.provider.Serializer"/>
    <fullyQualifiedTypeName name="javax.transaction.Transactional"/>
    <fullyQualifiedTypeName name="org.springframework.transaction.annotation.Transactional"/>
    <fullyQualifiedTypeName name="com.microservice.EmployeeService.Model.EmployeeRepository"/>
    <fullyQualifiedTypeName name="com.microservice.EmployeeService.Entity.Employee"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.GlobalFilter"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestControllerAdvice"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ExceptionHandler"/>
    <fullyQualifiedTypeName name="java.lang.Runtime"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpRequest"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
    <fullyQualifiedTypeName name="org.springframework.http.server.reactive.ServerHttpRequest"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="com.example.gatewayservice.Client.AuthServiceClient"/>
    <fullyQualifiedTypeName name="com.example.gatewayservice.DTO.JwtDTO"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="com.example.gatewayservice.Utils.JwtUtil"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="feign.codec.Decoder"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.support.SpringDecoder"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.ObjectFactory"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.http.HttpMessageConverters"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.ObjectProvider"/>
    <fullyQualifiedTypeName name="org.springframework.http.converter.HttpMessageConverter"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="com.example.gatewayservice.Client.AuthServiceClient2"/>
    <fullyQualifiedTypeName name="org.springframework.boot.web.client.RestTemplateBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="reactor.core.publisher.Mono"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="javax.persistence.ElementCollection"/>
    <fullyQualifiedTypeName name="org.springframework.web.filter.OncePerRequestFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="com.microservice.authservice.Config.JWTOncePerRequestFilter"/>
    <fullyQualifiedTypeName name="com.microservice.authservice.util.JWTUtil"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Jws"/>
    <fullyQualifiedTypeName name="java.lang.Class"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Claims"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="com.netflix.discovery.converters.Auto"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="java.security.Principal"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.AuthenticatedPrincipal"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.dao.DaoAuthenticationProvider"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="com.microservice.authservice.Config.ApplicationUserDetails"/>
</qualifiedTypeNameHistroy>
