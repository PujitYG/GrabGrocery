package com.microservice.authservice.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.microservice.authservice.DTO.UserDetailsDTO;
import com.microservice.authservice.Exception.InvalidCredentialException;
import com.microservice.authservice.Exception.UserAlreadyExistException;
import com.microservice.authservice.services.AuthService;
import com.netflix.discovery.converters.Auto;

@RestController
@RequestMapping("/")
public class AuthController {
	
	@Autowired
	AuthService authService;
	
	@GetMapping("")
	public String test() {
		return "Hello";
	}
	
	@PostMapping("add/user")
	public ResponseEntity<String> addUser(@RequestBody UserDetailsDTO userDetails) throws UserAlreadyExistException{
		
		if(authService.userExists(userDetails)) throw new UserAlreadyExistException("User Already Exits");
		
		String message = authService.addUser(userDetails);
		
		return ResponseEntity
				.status(200)
				.body(message);
	}
	
	public ResponseEntity<Boolean> validateUser(@RequestBody UserDetailsDTO dto) throws InvalidCredentialException{
		
		boolean message = authService.validateUser(dto);
		
		return ResponseEntity
				.status(200)
				.body(message);
	}

}
